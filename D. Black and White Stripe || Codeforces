#include <bits/stdc++.h>
#define int long long
#define pb push_back
// #define __lcm boost::math::lcm
using namespace std;
void fast()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output1.txt", "w", stdout);
#endif
    std::ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
} 
void solve()
{   
   int n,k;
   cin>>n>>k;
   string s;
   cin>>s;
   vector<int>count(n+1);
   for(int i=1;i<=n;i++){
    //this is a type of updating +1 or +0 if the result is t = +1 else +0 
    count[i]=count[i-1]+(s[i-1]=='W');
   }
   int ans=INT_MAX;
   //this is where sliding window is working like k->0 ans k+1->1 0-1-2-k-k+1-k+2
   for(int i = k;i<=n;i++){
        ans=min(ans,count[i]-count[i-k]);
   }
    cout<<ans<<endl;
}
main()
{
    fast();
    int t;
    cin >> t;
    while (t--)
    solve();
}
